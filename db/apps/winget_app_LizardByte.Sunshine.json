{"appId":"winget_app_LizardByte.Sunshine","appShortcutName":"Winget Application","appDisplayName":"Sunshine","authorId":"winget","releaseTagName":"winget-2025.118.151840","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/LizardByte/Sunshine/releases/download/v2025.118.151840/sunshine-windows-installer.exe"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Sunshine is a Gamestream host for Moonlight.\n\nSunshine is a self hosted, low latency, cloud gaming solution with support for AMD,\nIntel, and Nvidia GPUs.\nIt is an open source implementation of NVIDIA's GameStream, as used by the NVIDIA Shield.\nConnect to Sunshine from any Moonlight client, available for nearly any device imaginable.\n- Implemented automatic resolution and HDR mode changing on Windows.\n- Implemented YUV 4:4:4 encoding support for Intel and NVIDIA GPUs on Windows.\n- Implemented automatic discovery support for macOS hosts.\n- Added support for capturing displays other than the main display on macOS.\n- Added support for emulating DS5, Nintendo Switch Pro, and Xbox One controllers on Linux.\n- Removed the limit on concurrent streaming sessions.\n- Eliminated the need for driver patching to use NvFBC capture on Linux.\n- Significantly reduced CPU usage for encoding when using AMD GPUs (RDNA or later) on Windows.\n- Fixed video traffic timeout error when streaming from a Hyper-V VM using GPU Paravirtualization.\n- Fixed inability to stream from a Windows machine when using the Microsoft Basic Display Adapter driver.\n- Optimized internal frame handling by eliminating redundant data copies and using functions optimized for SSSE3,\n- Implemented flow control to reduce the chance of dropped packets by overwhelmed routers or network switches.\n- Reworked the video encoding rate control logic for VA-API to improve bitrate efficiency on Linux.\n- New capture method using Windows.\n  Graphics.\n  Capture API on Windows.\n- Clients can now be named and unpaired individually.\n- The web UI now supports dark mode.\n- Checkboxes replace select menus for boolean settings in the web UI.\n- RestAPI improvements.\nWhat's Changed\n- feat(macos/capture): support for capture display other than main display by @TimmyOVO in #2449\n- fix(macos/input): incorrect mouse input for non-main display by @TimmyOVO in #2461\n- webui: Update resolution automation example text with auto refresh rate by @cgarst in #2503\n- fix(linux): add frame processing latency and logging improvements by @gschintgen in #2502\n- AppImage: add needed VA-API libraries (Intel & AMD) by @gschintgen in #2429\n- Allow a custom FFmpeg build to be provided using CMake variables by @chewi in #1970\n- Fix log message for Periodic Ping by @c3m3gyanesh in #2538\n- feat(ui): Dark Mode by @Hazer in #2493\n- build(win): use UCRT64 environment instead of MinGW64. by @tez011 in #2323\n- feat(win): new capture method, Windows.\n  Graphics.\n  Capture  by @tez011 in #2580\n- Name and unpair individual clients by @xanderfrangos in #2042\n- feat(audio): custom surround-params by @mariotaku in #2424\n- Remove the need for a patched nvidia library for NvFBC. by @hgaiser in #2471\n- build(linux): add homebrew support by @ReenigneArcher in #2667\n- fix(macos): Mouse input broken in-game by @Hazer in #2550\n- feat(input/linux): add support for more virtual input devices by @Hazer in #2606\n- fix(linux/input): battery values conversion by @ABeltramo in #2715\n- feat: add min_fps_target setting by @ReenigneArcher in #1043\n- fix(upnp): support newer miniupnpc library by @ReenigneArcher in #2782\n- macOS: New implementation of service publication by @cathyjf in #2786\n- build(linux): drop support for AUR by @ReenigneArcher in #2819\n- Implement basic network flow control by @ns6089 in #2803\n- Provide SSSE3, AVX2, and AVX512 optimized Reed-Solomon functions by @cgutman in #2828\n- Eliminate a redundant alloc+copy of each frame by @cgutman in #2852\n- Implement S/G IO for non-batched sends and eliminate more data copies by @cgutman in #2867\n- Implement S/G IO for batched sends and eliminate another frame copy by @cgutman in #2874\n- Migrate audio pipeline to float from 16-bit integer by @ns6089 in #2873\n- Handle CTRL_CLOSE_EVENT on Windows by @ns6089 in #2952\n- feat!: drop advertised resolutions and fps by @ReenigneArcher in #2924\n- fix(linux): ensure NvFBC capture works after multiple sessions by @insanemal in #3020\n- feat(win/video): support native YUV 4:4:4 encoding by @ns6089 in #2533\n- fix(linux): enable lowlatency mode for AMD by @ReenigneArcher in #3088\n- fix(nvhttp): wrap TLS socket to ensure graceful closure by @cgutman in #3077\n- fix(mdns): don't hardcode mDNS instance name by @cgutman in #3084\n- fix(win/video): don't offload chroma subsampling math to texture sampler when downscaling by @ns6089 in #3014\n- build(cmake): Prioritize vendored includes over system-wide by @jmou in #3182\n- fix(macos): Touch input broken by @BayLee4 in #3240\n- fix(video): encode at least one frame before capture reinit by @cgutman in #3300\n- fix: Reverse Proxy support by @Degot in #3173\n- feat(stream)!: remove limit on concurrent sessions and allow quitting apps with active sessions by @cgutman in #3325\n- fix(nvenc): disable filler data in AV1 bitstream by @cgutman in #3336\n- feat(vaapi): add option to enable strict enforcement of frame size by @cgutman in #3332\n- fix(macos): prevent indefinite hanging if screen capture is not granted by @cathyjf in #3360\n- fix(process): avoid leaking zombies and fds in detached processes by @cgutman in #3379\n- fix(hostname): fix handling of non-ASCII hostnames on Windows by @cgutman in #3382\n- feat(display)!: Add libdisplaydevice dependency and output name mapping by @FrogTheFrog in #2894\n- fix(nvenc): Enable opt-in client refresh by client by @TheElixZammuto in #3415\n- fix(shaders/directx): replace modulus with bitwise operator by @iMakeSoftware in #3499\n- feat(display): Configure display device based on user config by @FrogTheFrog in #3441\n- fix(confighttp): do not return 200 on errors by @ReenigneArcher in #3385\n- feat(display): add display mode remapping option by @FrogTheFrog in #3529\n- fix(capture/windows): fix capture when using the basic render driver by @cgutman in #3531\n- feat(capture/windows): hook APIs to avoid output reparenting that breaks DDA by @cgutman in #3530\n- fix(checkbox): inverse global prep values for apps by @FrogTheFrog in #3547\nNew Contributors\n- @TimmyOVO made their first contribution in #2449\n- @cgarst made their first contribution in #2503\n- @skryvel made their first contribution in #2514\n- @c3m3gyanesh made their first contribution in #2538\n- @BeeLeDev made their first contribution in #2555\n- @xanderfrangos made their first contribution in #2042\n- @hgaiser made their first contribution in #2471\n- @cathyjf made their first contribution in #2786\n- @cfalas made their first contribution in #2841\n- @insanemal made their first contribution in #3020\n- @jmou made their first contribution in #3183\n- @BayLee4 made their first contribution in #3240\n- @andygrundman made their first contribution in #3294\n- @midwesternrodent made their first contribution in #3287\n- @caveat-makes-software made their first contribution in #3264\n- @Degot made their first contribution in #3173\n- @soerenkampschroer made their first contribution in #3348\n- @davidemarcoli made their first contribution in #3356\n- @MiroKaku made their first contribution in #3416\n- @petrhanak made their first contribution in #3490\n- @iMakeSoftware made their first contribution in #3499\n- @Gurubaseio made their first contribution in #3466","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"2025.118.151840","site":"https://app.lizardbyte.dev","source":"LizardByte","license_or_tos":"GPL-3.0","resources":null,"verified":false}