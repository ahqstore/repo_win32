{"appId":"w:IntegrIT.Hackolade","appShortcutName":"Hackolade","appDisplayName":"Hackolade","authorId":"w:winget","releaseTagName":"winget-8.5.2","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://s3-eu-west-1.amazonaws.com/hackolade/previous/v8.5.2/Hackolade-win64-setup-signed.exe"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Polyglot Data Modeling for SQL and NoSQL databases, APIs, and storage formats\n\nHackolade Studio is an intuitive yet powerful application to perform the visually data modeling and schema design of many SQL and NoSQL databases, APIS, and storage formats.\nHackolade Studio combines the graphical representation of collections in an Entity Relationship Diagram, with the graphical representation of the JSON Schema definition of each collection in a hierarchical schema view. Together, these graphical representations provide the schema model for data-at-rest and data-in-motion, plus the documentation of that model. The application is specifically designed around the powerful nature of JSON nested sub-objects and denormalization.\nThe software facilitates the work of, and the dialog between analysts, architects, designers, developers, testers, DBAs, and operators of systems that are based on such technologies. It also can generate schema scripts and documentation in a variety of machine-readable formats (DDLs, JSON Schema, Avro, Parquet, Protobuf, ...) as well as database instances, or human-readable formats such as HTML, Markdown, and PDF reports.\nInstead of having to find data structures tacitly described in the application code, the creation of a database model helps to evaluate design options beforehand, think through the implications of different alternatives, and recognize potential hurdles before committing sizable amounts of development effort. A database model helps plan ahead, in order to minimize later rework. In the end, the modeling process accelerates development, increases quality of the application, and reduces execution risks.\n- Tech refresh of ElectronJS (v38.3.0), NodeJS (v22.20.0), Chromium (v140.0.7339.240), V8 (v14.0.365.10) and related modules\n- Compare & Merge: improved global performance, particularly noticeable with lineage capture\n- ERD: improved performance for zooming, scrolling, selecting, and drag-and-drop actions when handling a large number of relationships\n- ERD: improved entity addition from ERDV to ensure new entities are positioned in ERD close to existing ones within the same container\n- Excel: added tolerance for primary keys missing their key\n- Reverse-engineering: enhanced performance of selection dialog to support displaying large number of entities\n- Oracle: added version 26ai\n- Oracle: added support for renaming entities and entities in ALTER script\n- Oracle: Â improved application of script generation options in ALTER script\n- PostgreSQL: improved application of script generation options in ALTER script\n- SQL Server/AzureSQL: added support for reverse-engineering of Microsoft Fabric\n- SQL Server/AzureSQL: changed auth methods from Azure AD to Entra ID\n- SQL Server/AzureSQL: improved application of script generation options in ALTER script\n- Synapse: added support for reverse-engineering of Microsoft Fabric\n- Synapse: changed auth methods from Azure AD to Entra ID\n- YugabyteDB: introduced flexibility in script generation for controlling constraints in CREATE scripts (3 choices: \"In CREATE statement\", \"In separate statement\" or \"Ignore\"), controllable from Tools > Options > Forward-Engineering parameters, plus from forward-engineering lower tab and via Tools > Forward-Engineer menu","repo":{"author":"microsoft","repo":"winget-pkgs"},"usrVersion":"8.5.2","version":0,"site":"https://hackolade.com/","source":"Hackolade","license_or_tos":"Proprietary","resources":null,"verified":false}