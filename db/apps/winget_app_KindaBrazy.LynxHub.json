{"appId":"winget_app_KindaBrazy.LynxHub","appShortcutName":"Winget Application","appDisplayName":"LynxHub","authorId":"winget","releaseTagName":"winget-2.2.1","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/KindaBrazy/LynxHub/releases/download/V2.2.1/LynxHub-V2.2.1-win_x64-Setup.exe"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Your All-In-One AI Platform.\n\nLynxHub offers a comprehensive suite of features designed to streamline your AI workflow and enhance your experience. Here's what you can expect:\n- Extensible Architecture\n  - Enhance LynxHub's capabilities with custom extensions.\n- Modular Design\n  - Fully modular architecture allowing third-party developers to create and publish custom modules\n  - Modules can add new AI web interfaces (WebUIs) to the app, fully customizable by the developer\n  - Developers can pre-define custom arguments, extensions, commands, and other configurations as part of the module, creating pre-configured WebUIs for users\n- AI Interface Management\n  - Install, config and update\n  - Switch branches, shallow clone, unshallow, see latest commit details\n  - Manage AI extensions with options for batch updates and auto-update settings\n  - View available extensions and install them directly\n- Arguments Manager\n  - Available arguments list, add, remove, and edit various argument types (dropdowns, checkboxes, text input, folder/file selection - relative, absolute)\n  - Search through arguments\n  - Create and manage argument presets for different setups\n- Custom Run Commands\n  - Set and manage custom terminal commands for executing WebUI\n- Pre-launch Actions\n  - Automatically execute custom terminal commands before launching AI interfaces\n  - Open specific files or folders as part of the pre-launch process\n- Browser and Terminal Integration\n  - Built-in terminal and web browser for seamless integration\n  - Automatic detection and launch of relevant addresses (URLs, files)\n  - Switch easily between terminal and browser modes\n  - Terminal customization settings\n- Markdown Viewer\n  - Built-in Markdown viewer for easy reading of documentation and notes.\n- AI Information Dashboard\n  - View developer information, installation and update status\n  - Access update tags, release notes, and disk usage statistics for each AI interface\n- UI Customization\n  - Customize the layout of cards for a flexible user interface\n  - Dark and light themes available\n  - Pin favorite AI interfaces to the home page for easy access\nApp Changes:\nâœ¨ New Features\n- Git Cloning Enhancements: Added options for cloning single branches, specifying branch names, and setting clone\n  depth.\n- Repository Card Menu: Introduced a new menu item on Repository cards, providing access to branch management (view, switch), repository reset, unshallow, and commit details.\n- Card Duplication: Added the ability to duplicate cards. #8\nâš¡ Improvements\n- In-App Readme Viewer: Displays the readme file within the app for cards that are not yet installed.\n- Staggered Card Update Checks: Card update checks are now performed sequentially on startup instead of all at once.\n- Streamlined Pinning: Replaced the ribbon with an icon button for pinning cards.\n- Shallow Cloning for AI Extensions: Utilizes shallow cloning for faster installation of AI extensions.\n- Optimized AI Information: Uses the cardInfo modules method for AI information instead of the built-in method.\n- Search Result Refinement: Hides the arguments category when search results are empty.\n- Ctrl+Click Shortcuts:\n  - Open a card's homepage in an external browser using Ctrl+click.\n  - Open a card's project folder by Ctrl+click on \"Open Folder\" in the card menu.\nðŸª² Bug Fixes\n- Fixed an issue where card menu items might not function correctly.\n- Resolved issues with the settings layout extending beyond the app screen.\n- Correct the layout of customized card settings for smaller window sizes.\n- Removed the update badge after a successful card update.\n- The User component in card info is now rendered correctly when a valid picUrl is present.\n- Resolved issues with the zoom functionality in the in-app browser.\n- Fixed broken links within the in-app browser.#25\n- The \"Extension Installed\" button is no longer shown if an installation error occurs.\n- The uninstall menu item is now hidden if a card has no installation directory.\nðŸ“Œ Minor Changes\n- Added the ability to edit card titles.\n- Modules and extensions are switched to the early-access branch for early-access users.\n- Updated the style of the Run Behavior selection and added descriptions.\n- Set all radius values to the default (md).\n- Restored the joined style for button groups.\n- Adjusted menu icon sizes for consistency.\n- Hides the description component in card info if it's empty.\n- A \"Modules Page\" button is now displayed when no cards are present.\n- Added --set-upstream-to when changing branches.\n- The update menu item is now only shown when an update is available for cards with custom update checks.\nApi and Backend Changes\nApp\n- Updated the application to use React 19.\n- Removed the Mantine UI library.\n- Migrated from NextUI to HeroUI.\n- add dark/light class name to document before render\n- add 1s timeout before closing loading and showing main app\nPlugins\nGeneral\n- feat(plugin_manager): skip loading extensions/modules not meeting requireAppBuild\nModules\n- Removed the context and load modules as external (using useSyncExternalStore).\n- feat(modules): add ability to check for installed card\n  - Added the ability to use storage for saving and reading custom data.\n  - Added the ability to disable locating card\n- feat(modules): add installationType type to modules API\n- feat(extensions): add CardGitManager modal to extensions API\n- feat(stepper): add storage to module Stepper API\n- feat(module_api): add setUpdated to modules API stepper\n- feat(modules): pass configDir and storage utils to getRunCommands, readArgs, and saveArgs\n- feat(modules): pass node-pty to module main methods\nExtensions\n- feat(extensions): update modulesData API to reflect modules changes\n- feat(extensions): add requireAppBuild to ExtensionsInfo type\n- feat(extensions): indicate unloaded extensions with tooltip explaining the reason\n\nFull Changes: https://github.com/KindaBrazy/LynxHub/compare/5805da3...8631046 | Source Point: 8631046","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"2.2.1","site":"https://github.com/KindaBrazy","source":"KindaBrazy","license_or_tos":"AGPL-3.0","resources":null,"verified":false}