{"appId":"w:MoonchildProductions.PaleMoon","appShortcutName":"Pale Moon","appDisplayName":"Pale Moon","authorId":"w:winget","releaseTagName":"winget-33.9.0","downloadUrls":{"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://rm-eu.palemoon.org/release/palemoon-33.9.0.win64.installer.exe"}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"The best browser with fast site rendering, advanced privacy, a sleek design and innovative features.\n\nPale Moon is an Open Source, Goanna-based web browser available for Microsoft Windows and Linux (with other operating systems in development), focusing on efficiency and ease of use.\nPale Moon offers you a browsing experience in a browser completely built from its own, independently developed source that has been forked off from Firefox/Mozilla code a number of years ago, with carefully selected features and optimizations to improve the browser's stability and user experience, while offering full customization and a growing collection of extensions and themes to make the browser truly your own.\nThis is a mjor development, bugfix and security release, focusing primarily on improving web compatibility.\nSpecial thanks to the students from the University of the Philippines Los Ba√±os for their work on improving CSS in the platform over the summer!\n\nNew features:\n- Implemented the CSS4 revert keyword.\n- Implemented the clip keyword for overflow. See implementation notes.\n- Implemented axis-shorthand parsing of overflow. This should fix some issues with areas being unscrollable on the web.\n- Implemented CSS color-mix (RGB and HSL color spaces only).\n- Implemented CSS @supports(selector(<complex selector>)) syntax.\n- Implemented CSS Cascade Layers @layer support.\n- Implemented support for CSS clip-path:<geometry-box> without actually supplying a clip path to use. See implementation notes.\n- Implemented overflow-inline and overflow-block CSS properties.\n- Implemented the :autofill CSS pseudo-class. Auto-filled fields will now also be styled by default to indicate autofilling/password manager recall has occurred.\n- Implemented the :focus-visible CSS pseudo-class.\n- Implemented the prefers-reduced-motion CSS media query. See implementation notes.\n- Implemented a minimal version of the visualViewport web API. See implementation notes.\nChanges/fixes:\n- Un-prefixed CSS -moz-user-select and aligned with the user-select CSS4 spec.\n- Un-prefixed CSS -moz-read-only and -moz-read-write pseudo-classes.\n- Improved the handling of X-Content-Type-Options: nosniff to align more with the spec and expected behavior on the web.\n- Added support for FFmpeg 7.0/libavcodec 61.\n- Fixed a bug where sub-properties of CSS border-image would not update when the value they inherit from changes.\n- Fixed a bug where scrollbar-width was incorrectly treated as an inherited property.\n- Fixed an issue where screen/pixel color depth could potentially be mis-reported on Linux.\n- Fixed a potential issue with fontconfig on Linux. We now explicitly initialize fontconfig on startup.\n- Fixed various issues with vpx on PowerPC architectures.\n- Fixed issues when building ffvpx on architectures without assembly support.\n- Fixed a memory safety issue in two-position gradient color-stops code.\n- Changed the way @import rules are processed. They will now be processed in the order of appearance in the importing stylesheet.\n- Changed how TypedArray constructors handle initialization values, aligning with the ECMAScript spec. See implementation notes.\n- Changed how Cache-control HTTP headers are parsed if multiple headers are present in a response.\n- Made additional improvements to \"Copy as cURL\" devtools command.\n- Security issues addressed: CVE-2025-10536 and CVE-2025-10533 DiD.\nImplementation notes:\n- The clip keyword allows you to specify overflow behavior that acts like a \"passe-partout\". This means any overflow will be hidden and content unscrollable.\n  Important note: we have strictly followed the standard specification here which may result in issues on some websites if they do not explicitly specify overflow behavior in both axes when using clip as a keyword. clip, per the specification, results in unscrollable hidden content. If the other axis is unset, it will result in visible overflow that is also unscrollable (no scrollbar or mousewheel scrolling). Other browsers may default to scrollable visible overflow, instead. If you are a webmaster, please double-check if you are specifying overflow correctly when you are using clip. Because some of clip's behavior may be unintuitive at first glance, it serves well to always be explicit in both directions what kind of overflow behavior is desired.\n- Pale Moon now supports specifying a CSS clip-path with just a geometry box (e.g. border-box) without defining a path. This should fix some websites displaying fully blank pages due to webmasters relying on implied \"border-following\" clipping when specifying a clip-path this way. Previously, this would result in everything being clipped (which used to be the explicit behaviour when no path definition was provided).\n- The CSS media query prefers-reduced-motion can be used by webmasters to provide alternative styling of web pages when users indicate that they prefer web pages with less visual motion (e.g. for accessibility considerations for people with vestibular motion disorders). Pale Moon users can indicate this preference with a new option in the browser (Preferences -> Advanced -> tab \"General\" -> \"Prefer reduced visual motion\" under Accessibility). Please note that this option doesn't change how the browser itself handles e.g. animations or CSS; it is up to the webmaster to make use of this CSS feature to cater to visitors with this preference indicator.\n- We now support a minimal implementation of the visualViewport web API. This API provides webmasters with indicators how much of the visible web pages should be considered \"fully visible\" to users. This API is primarily designed to cater to mobile traffic where browsers may be impaired by e.g. a camera notch in the screen. Since this isn't a concern on desktop, we always return a fixed (0,0) value for origin and offset. For other parts of the API, we give back the width/height of the root scrollframe of web content, while for scale we pass forward our dpp resolution (usually 1.0).\n- TypedArray constructors can be passed initialization values to indicate the initial size of the array to create. According to the specced behavior, we should accept most values (anything accepted by ToIndex), even those that make no sense (e.g. a string or undefined). This has now been changed to align with that spec and we no longer throw an error in those cases, and simply return a 0-length typed array instead.","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"33.9.0","site":"https://www.palemoon.org/","source":"Moonchild Productions","license_or_tos":"MPL-2.0","resources":null,"verified":false}