{"appId":"w:Rizin.Rizin","appShortcutName":"Winget Application","appDisplayName":"Rizin","authorId":"w:winget","releaseTagName":"winget-0.8.0","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/rizinorg/rizin/releases/download/v0.8.0/rizin_installer-v0.8.0-x86_64.exe"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"UNIX-like reverse engineering framework and command-line toolset.\n\nRizin is a fork of the radare2 reverse engineering framework with a focus on usability,\nworking features and code cleanliness.\n\nRizin is portable and it can be used to analyze binaries, disassemble code, debug programs,\nas a forensics tool, as a scriptable command-line hexadecimal editor able to open disk files,\nand much more!\n\nIn this release we completed migration of the code to the rzshell - YAML-based commands description language and corresponding APIs.\nAnother notable refactoring change - a beginning of merging RzAsm and RzAnalysis plugins into RzArch ones, currently incomplete and with compatibility layer. Move RzParse plugins into the RzArch as well. Huge refactoring happened in search commands, to better handle Unicode and regular expressions.\nOn the RzIL front, new architectures now support uplifting:\n- MIPS\n- PIC\n- MSP430\n- Xtensa\n- Hexagon\n- Tricore uplifting was improved to include all missing floating point instructions.\nNew architectures were added:\n- DEC Alpha\n- nanoMIPS (a part of MIPS ISA family)\n- LoongArch.\nAs usual, these architectures were added into the Capstone as well.\nESIL is marked as deprecated and will be removed in the next release.\nAnalysis behavior slightly changed - now Rizin checks for jumps to function preludes by default.\nAdded support for parsing PE relocations. Added support for Python 3.11-3.13 bytecode versions.\nNew and refactored search commands (strings, bytes, cryptographic material) dispatch their work now into threads. Making them faster on large files. This drops support for search modifiers /f, /b etc.\nAnd, as usual, droves of various fixes across the framework.\nShow scrolling progress in percent in various interfaces, e.g. in Vv (lower right corner):\nScreenshot 2025-04-22 at 8 51 07 PM\nNew command line options\n- rz-find -E to execute a command on every match\n- rz-ax - add MS-DOS and Win32 timestamp conversion\n- Add linker version to rz-bin -I output\nNew commands\n- dcco - continue until call\n- aezsue - step until PC equals given address and output RzIL VM changes\n- fdt command to print more information about the flag\n- dbtt to print in a table mode\n- aLc command to list features and CPUs of an RzArch plugin (and rz-asm -m to do the same)\n- /cm to search for cryptographic materials\n- /ce and /cef commands for entropy search\n- /z command for searching strings (supports now Unicode 16, regex, and many encodings).\n- izx data to list strings that are referenced from somewhere else\nRemovals\n- Deprecated APIs\n- RAP protocol\n- NIOS-II architecture support\n- fb command\n- dta command\n- /w - now handled by /z\n- /!\n- /b\n- /f\n- /+\n- /cd\n- /ca\n- /cr\n- obr\n- rizin -Q flag\nRenames:\n- avg renamed into avgl, added table mode\n- / command became /z\n- /e command became either /z or /xr\nConfiguration variables changes\nRemoved options\n- str.search.max_uni_blocks\nRenamed options\n- str.search.encoding -> str.encoding - Valid for all string interpretations.\n- str.search.max_threads -> search.max_threads - This is a general setting for the search now.\n- str.search.raw_alignment -> search.str.raw_alignment\n- str.search.min_length -> search.str.min_length\n- str.search.buffer_size -> search.str.max_length\n- str.search.max_region_size -> search.str.max_region_size\n- str.search.check_ascii_freq -> search.str.check_ascii_freq\nDependency\nThis release adds a dependency on SoftFloat3 library for RzFloat and RzIL floating point operations.\nSponsors\n@stephen-fox","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"0.8.0","site":"https://github.com/rizinorg","source":"RizinOrg","license_or_tos":"LGPL-3.0","resources":null,"verified":false}