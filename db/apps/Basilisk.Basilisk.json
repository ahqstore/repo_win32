{"appId":"w:Basilisk.Basilisk","appShortcutName":"Winget Application","appDisplayName":"Basilisk","authorId":"w:winget","releaseTagName":"winget-52.9.2025.04.23","downloadUrls":{"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://dl.basilisk-browser.org/basilisk-20250422154345.win64.installer.exe"}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"A XUL-based web-browser built on top of the Unified XUL Platform (UXP). This browser is a close twin to pre-Servo Firefox in how it operates.\n\nBasilisk is a free and Open Source XUL-based web browser, featuring the well-known Firefox-style interface and operation. It is based on the Goanna layout and rendering engine (a fork of Gecko) and builds on the Unified XUL Platform (UXP), which in turn is a fork of the Mozilla code base without Servo or Rust.\nThis is a development, bugfix, stability, and security release.\n- Implemented CSS two-location color stop logic. This allows for two-location color stops (`color x% y%`) in gradients, which is shorthand for `color x%, color y%` where both colors are equal.\n- Our minimum GCC version requirement to build is now 9.1.\n- Improved channel handling when CSP blocks network redirects.\n- Implemented several fixes for CORS preflight requests.\n- Added explicit whitelisting from CSP content loading of javascript: scheme URLs.\n- Updated the ffvpx library to 6.0.1, this time preventing video color range regressions. An update to 6.0 was previously backed out in 33.5.0.\n- Updated the JPEG-XL library to 0.11.1 to pick up several fixes and improve decoding compatibility of jxl files.\n- Updated the SQLite library to 3.49.1.\n- Fixed a spec compliance issue with DOMRect and DOMQuad returning 0 if NaN was present. We now return NaN in that case, per spec.\n- Fixed a spec compliance issue with NTLM authentication. We now compute Channel Binding Hashes using the certificate signature's hash algorithm, per spec.\n  Note that particularly weak algorithms are not used and SHA256 will be used as a minimum, instead, in those cases.\n- Fixed a buildability issue on Mac with XCode 16.3.\n- Added some additional safety checking to SharedArrayBuffers.\n- Added some additional safety checking to XSLT compilation and transformation.\n- Windows only: Added a preference widget.windows.follow_shortcuts_on_file_open to control how Windows File Open dialogs handle shortcut links. See implementation notes.\n- Simplified some WASM code generation in the Ion JIT compiler.\n- Fixed a crash in loading external resource maps.\n- Disabled potentially unsafe attempts at recovering JIT operations.\n- Fixed some minor linking issues in about:rights.\n- Updated the embedded emoji font to fix incorrect display of some of the wheelchair emoji.\n- Built on UXP commit: d892468fd0\n- Security issues addressed: CVE-2025-1934 (DiD), CVE-2025-3028 (DiD), and and CVE-2025-3033 (see implementation notes)..\nImplementation notes\n- Windows only: This version introduces a new (numeric) preference to control how the \"Open File\" dialogs handle shortcut links in the file system.\n  A low-severity security issue (CVE-2025-3033) was found that in some specific circumstances could allow a malicious actor to convince a user to upload an unintended file from their file system with a specially-crafted shortcut file. To mitigate this, a special flag can be passed to File Open dialogs which prevent the dialogs from parsing shortcut links and navigating to target files and folders based on the shortcut file contents. This can be controlled with the newly-added preference. Since this flag, when set, also prevents users from navigating \"through\" shortcuts to folders (from e.g. the desktop) and would instead open/attach/upload the shortcut file itself, this would be disruptive to many users' workflows. Considering the major usability drawback and the low-severity nature of the security issue (which would require considerable social engineering to pull off), Basilisk, at least for the time being or until a better solution is found, will continue allowing the following of shortcuts and navigating through them to target folders and files in File Open dialogs. If you are overly cautious, you may want to set this preference to the value 0 which always prevents shortcut parsing and following. For everyone else, just a warning to please stay safe and never follow strange sequences of instructions from strangers that you don't exactly know what they do (and never take their explanations at face value).","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"52.9.2025.04.23","site":"https://www.basilisk-browser.org/","source":"Basilisk Development Team","license_or_tos":"MPL-2.0","resources":null,"verified":false}