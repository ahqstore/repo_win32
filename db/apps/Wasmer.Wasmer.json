{"appId":"w:Wasmer.Wasmer","appShortcutName":"Winget Application","appDisplayName":"Wasmer","authorId":"w:winget","releaseTagName":"winget-6.0.0","downloadUrls":{"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/wasmerio/wasmer/releases/download/v6.0.0/wasmer-windows.exe"}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"The leading WebAssembly Runtime supporting WASI and Emscripten\n\nWasmer is a fast and secure WebAssembly runtime that enables super lightweight containers to run anywhere: from Desktop to the Cloud, Edge and IoT devices.\nThis stable release adds support for the exception handling proposal on Linux and Darwin platforms when using LLVM, adds a new LLVM-specific optimization (--enable-pass-params-opt), allows for multiple heterogeneous backends to be embedded in the same Wasmer build (--llvm, --cranelift, --singlepass, --v8, --wamr, --wasmi), adds support for process spawning without asyncify via full support for posix_spawn in wasix-libc with the new proc_spawn2 syscall, a number of QoL improvements to CLI commands and WASIX and much more.\nAdded\n- #5524 feat(llvm): Add ability to select how many threads LLVM should use during compilation.\n- #5531 feat: Add Features::extend()\n- #5504 feat: Add support for perfmap-based profiler data generation\n- #5518 feat: Add SuggestedCompilerOptimization type(s) to automatically infer when to enable g0m0 optimization\n- #5514 Added support for tags in JS\n- #5485 docs: added a shield and a link to twitter\nChanged\n- #5532 chore(compiler): Print only the deterministic_id() of the engine in Debug impl\n- #5528 Update pre-release crate versions automatically\n- #5498 Simplify object initialization path with relocations\n- #5503 feat(llvm): Pass global #0 and memory #0 as parameters between guest functions\n- #5517 Updated singlepass and llvm compilers to use newer license\n- #5513 chore: Bump crossbeam-channel\n- #5501 Report one v2 and one v3 package when mixed packages are encountered â€¦\n- #5497 Reject mixed webc v2 and v3 in the same dependency tree\n- #5488 Make sure api crate builds without compiler's translator & compiler features\n- #5484 Make snapshot triggers strongly typed in the app schema\n- #5482 deps: Update to zip 2.4.x\n- #5483 Let cronjobs be triggered on a timer\n- #5443 Enable multiple backends supported by the api crate to be used in the c-api as well\n- #5469 Use engine-specific default features\nFixed\n- #5523 fix(types): Bump CURRENT_VERSION\n- #5525 fix(wamr): Wamr zip folder not found\n- #5522 fix(jsc): Export engine as JSC\n- #5512 fix(create-exe): Misc fixes to make create-exe work on aarch64 targeting Mach-O object files\n- #5519 fix: Allow BUSL-1.1 license in deny.toml\n- #5506 fix(compiler): Preserve original alignment of custom sections\n- #5505 Wasmer-JS fixes\n- #5507 Fix experimental attribute and support keyword in tests, update example comment\n- #5502 fix(compiler-test-derive): Don't use \"Universal\" as engine name/feature\n- #5491 fix(cli): Respect active backend in \"wasmer ssh\" command\n- #5489 fix: Metadata symbol size calculation in create-exe command\n- #5487 docs: fixed broken link\n- #5449 fix(api): Check if WasmSliceAccess ptr is aligned before reading\n- #5468 Journal fixes to enable PHP+proc_snapshot\n- #5470 fix(swift): Don't use default features in wasix, use the sys feature only\n- #5471 fix: Explicitly allow \"paste - no longer maintained\" advisory in cargo-deny\n- #5467 fix(journal): Use sys-default feature from wasmer\n- #5466 Fix feature flags to build packages when publishing crates","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"6.0.0","site":"https://wasmer.io","source":"Wasmer, Inc.","license_or_tos":"MIT","resources":null,"verified":false}