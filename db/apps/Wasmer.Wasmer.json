{"appId":"w:Wasmer.Wasmer","appShortcutName":"Wasmer","appDisplayName":"Wasmer","authorId":"w:winget","releaseTagName":"winget-6.1.0","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/wasmerio/wasmer/releases/download/v6.1.0/wasmer-windows.exe"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"The leading WebAssembly Runtime supporting WASI and Emscripten\n\nWasmer is a fast and secure WebAssembly runtime that enables super lightweight containers to run anywhere: from Desktop to the Cloud, Edge and IoT devices.\nThis release adds:\n- The dynamic linker which, paired with wasixcc, can load DL modules at runtime\n- New WASIX syscalls for reflection, dynamic function invocation and closure creation; this makes WASIX compatible with libffi\n- Better support for the Exception Handling proposal in the LLVM backend\n- The --build-remote flag for wasmer deploy, which lets you build packages in the cloud rather than locally\n- And many more stability fixes and improvements.\nAdded\n- #5763 chore(lib/vm): update corosensei to 0.3.0 to support AddressSanitizer\n- #5783 chore(cli): package unpack command: add shortform -u\n- #5773 feat(cli): Add loading spinner when compiling modules in TTY\n- #5775 Add /dev/shm to the root filesystem\nChanged\n- #5784 Use wasmerignore for bundling and gitignore for remote builds\n- #5774 SDK cleanup\n- #5770 Make table methods don’t fail in the browser\n- #5776 chore(cli): Provide fallback login instructions in login command\n- #5769 Promote async-trait to a workspace dependency\n- #5743 CLI: wasmer deploy --build-remote\n- #5526 feat(wasix): Improve module loading performance and API correctness\nFixed\n- #5789 fix(cli): Improve behaviour for deployments without wasmer.toml\n- #5761 Fix deadlocks in Selector\n- #5780 Fix/eh nested catch ref\n- #5779 Linker: fix dlsym'ing functions from the main modules when there are …\n- #5757 Fix order of arguments when spawning processes from WASI\n- #5756 Fix stalling issue when using shared libraries\n- #5745 fix(wasix): Linker must re-use the same Engine\n- #5752 LLVM: Fix compilation breaking for modules with function names that have sp…","repo":{"author":"microsoft","repo":"winget-pkgs"},"usrVersion":"6.1.0","version":0,"site":"https://wasmer.io","source":"Wasmer, Inc.","license_or_tos":"MIT","resources":null,"verified":false}