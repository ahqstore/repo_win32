{"appId":"w:Logtalk.Logtalk","appShortcutName":"Logtalk","appDisplayName":"Logtalk","authorId":"w:winget","releaseTagName":"winget-3.94.0","downloadUrls":{"1":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":null,"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Declarative object-oriented logic programming language\n\nLogtalk is a declarative object-oriented logic programming language that extends and leverages the Prolog language with modern code encapsulation and code reuse mechanisms while also providing improved predicate semantics.\nLogtalk compiler and runtime\n- ADDED: Object and category references/2 property for querying entity references in calls to the execution-context built-in methods and in directives for multifile predicates/non-terminals not covered by other properties.\n- ADDED: Linter warning for entity parameter variables not in parameter variable syntax. Controlled by the naming linter flag.\nDocumentation\n- FIXED: Incomplete documentation of the discontiguous/1 directive.\nTools\n- CHANGED: The lgtunit tool code coverage linter warnings to be printed when compiling the tests instead of when printing the code coverage results.\n- ADDED: Support for creating entity specific predicate breakpoints to the debugger tool.\n- UPDATED: The tutor tool to explain the new linter warning for entity parameters not in parameter variable syntax.\n- FIXED: The debugger tool to not change from debugging with breakpoints to tracing for the next top-level query if the trace/0 predicate was not used.\n- FIXED: The debugger tool to allow creating a triggered breakpoint that depends on a clause breakpoint for a parametric entity.\n- FIXED: Preliminary diagrams tool support for Mermaid resulted in syntax errors with recent Mermaid versions.\nExamples\n- UPDATED: The errors example to illustrate additional linter warnings.\nTests\n- ADDED: Additional tests for the object_property/2 and category_property/2 built-in predicates.\nIDEs, text editors, and syntax highlighters support\n- CHANGED: VSCode support for finding predicate references no longer includes predicate declarations.\n- ADDED: VSCode support for finding predicate declarations and definitions from a (@)/1 goal.\n- FIXED: VSCode support error when trying to find predicate references from an alias/2 directive with a protocol or category in its first argument.\n- FIXED: VSCode support failure to find a predicate declaration from a clause for a multifile predicate or from a multifile/1 predicate directive.\n- FIXED: VSCode support find_references/4 predicate bug where some references would be missed in the case of parametric entities.\n- FIXED: VSCode support find_references/4 predicate bug where predicate references in alias/2 directives would be missed.","repo":{"author":"microsoft","repo":"winget-pkgs"},"usrVersion":"3.94.0","version":0,"site":"https://logtalk.org/","source":"Logtalk.org","license_or_tos":"Apache-2.0","resources":null,"verified":false}