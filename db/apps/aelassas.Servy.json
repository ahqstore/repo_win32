{"appId":"w:aelassas.Servy","appShortcutName":"Servy","appDisplayName":"Servy","authorId":"w:winget","releaseTagName":"winget-2.7","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/aelassas/servy/releases/download/v2.7/servy-2.7-x64-installer.exe"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Servy lets you run any app as a native Windows service with full control over working directory, startup type, process priority, logging, health checks, pre-launch scripts and parameters.\n\nServy lets you run any app as a native Windows service with full control over the working directory, startup type, process priority, logging, health checks, environment variables, dependencies, pre-launch and post-launch hooks, and parameters. It's designed to be a modern, full-featured alternative to NSSM and WinSW.\n\nFeatures\n- Clean, simple UI\n- Monitor and manage all installed services with Servy Manager\n- Real-time CPU and RAM usage tracking for installed services\n- CLI and PowerShell module for full scripting and automated deployments\n- Run any executable as a Windows service\n- Set service name, description, startup type, priority, working directory, environment variables, dependencies, and parameters\n- Environment variable expansion supported in both environment variables and process parameters\n- Run services as Local System, local user, domain account, or Group Managed Service Account\n- Redirect stdout/stderr to log files with automatic size-based rotation\n- Supports `Ctrl+C` for command-line apps, close-window for GUI apps, and force kill if unresponsive\n- Run pre-launch hook before starting the service, with retries, timeout, logging and failure handling\n- Run post-launch hook after the application starts successfully\n- Prevent orphaned/zombie processes with improved lifecycle management and ensuring resource cleanup\n- Health checks and automatic service recovery\n- Browse and search logs by level, date, and keyword for faster troubleshooting from Servy Manager\n- Export/Import service configurations\n- Service Event Notification alerts on service failures via Windows notifications and email\n- Compatible with Windows 7â€“11 x64 and Windows Server editions\n\nWho is it for?\n- Developers: Run development servers, scripts, or custom tools as services without extra setup.\n- Sysadmins & IT professionals: Ensure critical background processes stay alive, monitored, and properly logged.\n- Teams or organizations: Automate background services reliably across multiple machines.\n- chore(winget,chocolatey): update manifests","repo":{"author":"microsoft","repo":"winget-pkgs"},"usrVersion":"2.7","version":0,"site":"https://github.com/aelassas","source":"Akram El Assas","license_or_tos":"MIT","resources":null,"verified":false}