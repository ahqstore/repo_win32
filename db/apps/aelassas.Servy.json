{"appId":"w:aelassas.Servy","appShortcutName":"Servy","appDisplayName":"Servy","authorId":"w:winget","releaseTagName":"winget-1.4","downloadUrls":{"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/aelassas/servy/releases/download/v1.4/servy-1.4-net8.0-x64-installer.exe"},"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Servy lets you run any app as a native Windows service with full control over working directory, startup type, process priority, logging, health checks, pre-launch scripts and parameters.\n\nServy lets you run any app as a native Windows service with full control over working directory, startup type, process priority, logging, health checks, environment variables, dependencies, pre-launch scripts and parameters. An open-source alternative to NSSM, WinSW and FireDaemon.\n\nFeatures\n- Clean, simple UI\n- Quickly monitor and manage all installed services with Servy Manager\n- CLI for full scripting and automated deployments\n- Run any executable as a Windows service\n- Set service name, description, startup type, priority, working directory, environment variables, dependencies, and parameters\n- Environment variable expansion supported in both environment variables and process parameters\n- Run services as Local System, local user, or domain account\n- Redirect stdout/stderr to log files with automatic size-based rotation\n- Run pre-launch script execution before starting the service, with retries, timeout, logging and failure handling\n- Prevent orphaned/zombie processes with improved lifecycle management and ensuring resource cleanup\n- Health checks and automatic service recovery\n- Monitor and manage services in real-time\n- Browse and search logs by level, date, and keyword for faster troubleshooting from Servy Manager\n- Export/Import service configurations\n- Service Event Notification alerts on service failures via Windows notifications and email\n- Compatible with Windows 7â€“11 x64 and Windows Server editions\n\nWho is it for?\n- Developers: Run development servers, scripts, or custom tools as services without extra setup.\n- Sysadmins & IT professionals: Ensure critical background processes stay alive, monitored, and properly logged.\n- Teams or organizations: Automate background services reliably across multiple machines.\n- fix(cli,powershell): add --quiet and -q options to CLI and -Quiet switch to PowerShell module #11\n- fix(cli): rotation size calculation\n- fix(configurator): make failure program path optional instead of required","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"1.4","site":"https://github.com/aelassas","source":"Akram El Assas","license_or_tos":"MIT","resources":null,"verified":false}