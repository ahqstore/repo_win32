{"appId":"w:DoltHub.Dolt","appShortcutName":"Winget Application","appDisplayName":"Dolt","authorId":"w:winget","releaseTagName":"winget-1.51.4","downloadUrls":{"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"1":{"installerType":"WindowsInstallerMsi","asset":"","url":"https://github.com/dolthub/dolt/releases/download/v1.51.4/dolt-windows-amd64.msi"}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Dolt is a SQL database that you can fork, clone, branch, merge, push and pull just like a git repository.\n\nDolt is a SQL database that you can fork, clone, branch, merge, push and pull just like a git repository.\nConnect to Dolt just like any MySQL database to run queries or update the data using SQL commands.\nUse the command line interface to import CSV files, commit your changes, push them to a remote, or merge your teammate's changes.\nMerged PRs\ndolt\ngo-mysql-server\n- 2940: Bug fix: ensure DropCheck.IfExists gets copied over to new instances\n  This change doesn't affect Dolt, but is needed by Doltgres to make sure IF EXISTS logic for dropping a constraint is correctly executed.\n- 2937: Fixed problems with StrExpr\n  Schema() was being called during Doltgres's Prepare implementation, and there's no reason it can't be.\n- 2936: Add support for ALTER TABLE ... DROP CONSTRAINT IF EXISTS\n  Depends on: dolthub/vitess#411\n- 2935: implement ntile\n  This PR implements the NTILE() SQL function, which groups rows into evenly sized buckets.\n  mysql docs: https://dev.mysql.com/doc/refman/8.4/en/window-function-descriptions.html#function_ntile\n  fixes: #9087\n- 2934: Unwrap inputs to find_in_set function.\n  This was missed in the initial wrapped values PR because we only had tests for find_in_set where the inputs came from VARCHAR columns. This adds a test for inputs from TEXT columns.\n  Fixes #9101\n- 2932: Optimize ConvertToBytes by avoiding unnecessary string <-> bytes conversions and copies.\n  ConvertToBytes is a commonly called function to get the string representation of a value. However, it has some unnecessary allocations where a child function allocates a byte buffer, only for the result to be copied into the buffer provided by the parent function. In other places we needlessly round-trip between string and []byte.\n  This PR improves performance by removing some of these unneeded copies. In places where ConvertToBytes calls a function that allocates a buffer (instead of using the buffer that ConvertToBytes can provide), we can optimize by using the returned value without copying it again.\n  Dolt shows a 7% improvement in the types_table_scan benchmark.\n  We can potentially do even better by allowing these child functions to take a buffer, removing the need for an extra allocation.\n- 2931: Corrected return type for RegexpLike\n  Required for proper type conversion in doltgres\nvitess\n- 411: Add AST support for DROP CONSTRAINT IF EXISTS\n- 410: fix ntile syntax\n  This PR implements the correct syntax for NTILE()\n  mysql docs: https://dev.mysql.com/doc/refman/8.4/en/window-function-descriptions.html#function_ntile\n  syntax for: #9087\n- 409: add var_samp to keywords\nClosed Issues\n- 9101: Handler caught panic: interface conversion: interface {} is *val.TextStorage, not string\n- 9099: Exceptionally long table names when adding unnamed constraints results in a Django error\n- 9087: Request for NTILE function","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"1.51.4","site":"https://github.com/dolthub/dolt","source":"DoltHub","license_or_tos":"Apache-2.0","resources":null,"verified":false}