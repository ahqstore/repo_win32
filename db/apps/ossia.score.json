{"appId":"w:ossia.score","appShortcutName":"score","appDisplayName":"score","authorId":"w:winget","releaseTagName":"winget-3.7.0","downloadUrls":{"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/ossia/score/releases/download/v3.7.0/ossia.score-3.7.0-win64.exe"}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"ossia score, an interactive sequencer for the intermedia arts.\n\n\nDiscord Open Collective backers and sponsors GitHub Sponsors\nossia score is a sequencer for audio-visual artists, designed to create interactive shows.\nSequence OSC, MIDI, DMX, sound, video and more, between multiple software and hardware. Create interactive and intermedia scores, script and live-code with JavaScript, ISF Shaders, Faust, PureData or C++. Leverage IoT protocols such as CoAP or MQTT, interact with joysticks, Wiimotes, Leapmotions, Web APIs and BLE sensors and integrate programs from a wealth of creative programming languages such as Structure Synth, Context-Free Art and Bytebeat. Load any kind of audio or video format and process visuals through Spout, Syphon, NDI, Shmdata or Sh4lt ; sonify large datasets with CSV and HDF5 support.\nossia score 3.7.0 is a feature-packed back-to-school release, with a specific focus on deep bugfix, as well as UX and quality-of-life improvements.\nFull Changelog: v3.6.1...v3.7.0\nNew features and changes\n- AirWindows: mono plug-ins will now be able to be used in polyphonic contexts (e.g. they will be scaled to the number of input channels.\n- Array recombiner: add a transposition mode to turn for instance [ r, g, b, r, g, b ] into [ [ r r ] [ g g ] [ b b ] ].\n- Audio: initial ADM-OSC support in the Spatialization device.\n- Beat metronome: it now has inlets for every subdivision, and keeps track of the count.\n- Execution: annotate the code base to ensure that execution things happen in the correct thread.\n- GPU: allow the ossia::geometry class to carry GPU handles in addition of CPU buffers.\n- Interpolator: make the alpha factor minimum lower to enable very, very smooth operation.\n- JS: add a Score.createCable(outlet, inlet) function.\n- JS: add a Utils.writeFile function.\n- JS: allow to add additional script include paths through SCORE_ADDITIONAL_SCRIPT_INCLUDE_PATHS environment variable.\n- JS: allow to create processes by UUID.\n- JS: allow to introspect all the processes in the library.\n- JS: allow to use Qt.exit(0).\n- Library: allow to scan QML objects with imports that do not have versions (Qt 6 QML).\n- Local tree: add a /script address that allows running JS console scripts.\n- Local tree: if sending the OSC message /exit force then no dialog will be shown to ask the user to save modified scores. This will cause data loss if not careful!\n- Local tree: properly support processes with variable numbers of ports.\n- New process: Accumulator. Statistical tools on incoming values: outputs sum, count, mean, variance, median, kurtosis, min and max.\n- New process: Array to texture. Turn a [ R G B A R G B A R G B A ] input array into a video texture.\n- New process: Compute Shader. This allows to use compute shader to generate and process images. This is one of the last steps towards a useful GPU-based instancing node for massive particles rendering.\n- New process: Counter. Counts the incoming messages. Can optionally loop over a provided max or clip when the max is reached.\n- New process: Easetanbul. Delicately ease from one incoming value to another with the classic easing functions.\n- New process: Pulse view. A simple LED that lights up on incoming messages.\n- New process: Repetition Filter. A simple object to filter repeated values, useful for quick debounce.\n- New process: Value Filter. A full-blown toolkit to filter incoming values according to multiple criterion: combines noise gate, range filter, repetition filter with a deadzone, hysteresis, clipping, and temporal filter.\n- New process: Vertex Shader Art. This allows to create dynamic audio-reactive visuals from vertex shaders, based on the eponymous website. Be sure to update the user library to get the new shaders, imported from the website github!\n- New processes: Bendage, a set of video-bending processes for real-time image destruction: JPeg, Xlippy and Safe Word. They had been developed years ago but sadly forgotten... More to come!\n- New protocol: LSL (Lab Streaming Layer) for integration with scientific hardware and software.\n- Object Loader: will now display .ply files in addition of .obj.\n- QML: add an OSC packet processor to easily handle OSC packets in custom protocols.\n- QML: add support for setting QVector2D / 3D / 4D values.\n- Shaders: shaders with a mouse input will now automatically start mapped to the first Window devices mouse.\n- Sound: clicking on the waveform will now select it.\n- UX: add a shift+delete shortcut to remove a process in the middle of a chain while keeping the connections in the chain alive if the processes before and after are compatible.\n- UX: allow to create nodes while dropping into an empty full view.\n- UX: allow to drop a process or preset from the library onto a cable to insert it in the middle of a chain, if the first inputs and outputs are compatible. Drop will be indicated by the cable becoming dashed.\n- UX: allow to drop a process or preset from the library onto a node to insert it in the middle of a chain, if the first inputs and outputs are compatible. Drop will be indicated by the node border becoming orange. This allows hot-swap behaviour, to easily switch for instance a shader or an audio effect for another live.\n- UX: change the visualization of ports when they contain an address, to indicate better whether the address is active or not.\n- UX: dropping multiple processes or files in nodal view will now properly offset them by a few pixels to improve clarity.\n- Value display: it is now possible to request the process to log the last N received messages.\n- Video: clicking on the thumbnail will now select it.\nBugfixes and improvements\n- Algorithms: replace std:: implementations by custom ones to improve speed under ASAN.\n- Audio: thorough rework of audio start / stop ; fix the annoying JACK warning when opening a new document.\n- Avnd: add an automated RGBA from / to RGB conversion for processes that want to operate on CPU RGB textures.\n- Avnd: improve the color handling API to allow more precise skinning of processes.\n- Avnd: various small backend improvements especially for handling musical ticks.\n- CI: force ffmpeg@7 on macOS homebrew as ffmpeg@8 does not export symbols?\n- CI: ton of bugfixes and change tracking as usual.\n- CLAP: implement more features of the spec, in particular tempo / time signature support.\n- CLAP: make flush occur in the exec thread, not the main thread, per the spec.\n- Execution: fix a long-lived execution bug where setting the speed too fast could cause an invalid token request to be submitted to processes.\n- Execution: many smaller improvements and optimizations.\n- FFT: multiple fixes to FFT implementation.\n- GPU: various improvements and bug fixes to the render loop.\n- ISF and other shaders: fix that the default shader had disappeared, when dropping the process without an existing preset.\n- ISF: many backend improvements and simplifications. Deep rework of audio textures handling.\n- ISF: remove now-unneeded values from UBOs.\n- Library: ensure subcategories are sorted.\n- Library: performance optimizations.\n- Local tree: bugfixes.\n- Metronome: fix a potential division by zero.\n- Network: handle cases where socket shutdown throws an exception.\n- Nodes: improve default node sizing and allow smaller nodes.\n- ONNX: add a SCORE_ONNX_FORCE_PROVIDER env var to allow setting the ONNX provider manually.\n- ONNX: many bugfixes to various models implementations.\n- Sound: do not resize the main interval if dropping a sound file. This fixes a bug where dropping a sound in an empty node could have stopped playback due to the sound having a finite duration.\n- Sound: fix that sound would sometimes disappear when changing the used soundfile live.\n- Sound: fix that trying to load invalid audio files could lead to unhandled exceptions.\n- Sound: update drwav to latest version which allows to handle more cases of ACID tags.\n- Spline: fix that it did not loop.\n- Time chooser widget: improvements to range handling.\n- Tooling: various bugfixes and improvements to fetch-sdk.sh.\n- UI: cosmetic adjustments to prevent process to sometimes leak by 1 pixel in the background.\n- UI: do not show the PROJECT / LIBRARY paths in Button UI.\n- UI: fix that the first switch between nodal and temporal mode could lead to a wrong zoom value being saved.\n- UI: improve render performance in execution due to the little green bar constantly causing a repaint of the cables.\n- UI: prevent cables seemingly plugging into nothing when objects are connected in the same interval. They will now be turned into short dashed stubs pointing to the direction of the other part.\n- UI: prevent long labels from overflowing in nodes.\n- UI: various fixes caused by cases where the mouse release event would not be delivered to graphical items, leading the score to possibly end up in an incoherent state.\n- UI: various fixes to drag and drop getting stuck\n- UX: fix that nodes for sound and video did not always have the correct size when switching to nodal view.\n- VST/VST3: fix a crash that occured when dropping a port in a parent interval.\n- VST/VST3: scanner will now also look in .vst / .vst3 in the HOME folder in all platforms.\n- Video: playback bugfixes.","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"3.7.0","site":"https://ossia.io/","source":"ossia","license_or_tos":"GPLv3","resources":null,"verified":false}