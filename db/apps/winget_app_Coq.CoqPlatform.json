{"appId":"winget_app_Coq.CoqPlatform","appShortcutName":"Winget Application","appDisplayName":"Coq","authorId":"winget","releaseTagName":"winget-2025.1.0","downloadUrls":{"0":{"installerType":"WindowsInstallerMsi","asset":"","url":""},"1":{"installerType":"WindowsInstallerExe","asset":"","url":"https://github.com/coq/platform/releases/download/2025.01.0/Coq-Platform-release-2025.01.0-version.8.19.2024.10-Windows-x86_64_UNSIGNED.exe"}},"install":{"win32":{"assetId":1,"exec":null,"scope":"Machine","installerArgs":null},"winarm":null,"linux":null,"linuxArm64":null,"linuxArm7":null,"android":null},"displayImages":[],"description":"Coq is a formal proof management system.\n\nThe Coq platform is a distribution of the Coq proof assistant together with a selection of Coq libraries. It provides a set of scripts to compile and install OPAM, Coq, Coq libraries and Coq plugins on MacOS, Windows and many Linux distributions in a reliable way with consistent results.\nRecommended binary installers\nATTENTION the binary installers are still in signing by INRIA - which takes a while.\nUnsigned installers are already available below.\nThe unsigned Windows installers work in tests if messages are confirmed.\nThe unsigned Mac installers are hard to use, especially when a signed version has been installed before. In case you need this urgently (e.g. for a lecture) we can supply a script which signs it locally after installation (such a signature is only valid on the machine it was made on as far as I can tell).\nNote: snap is no longer supported (we are working on a replacement)\nGeneral information\nSee README for general information and installation of Coq Platform.\nSee Charter for the concept and goals of Coq Platform.\nSee CEP52 for the Coq and Coq Platform release cycle.\nSee macOS, Linux and Windows for detailed installation and usage instructions.\nMajor enhancements\n- The language server for the VsCoq plugin is now included\n  - VSCoq can be connected directly to the vscoq-language-server supplied by a binary installer\n  - On Windows it is now also possible to connect VSCoq to a language server built from sources. This is achieved by hard linking all cygwin supplied MinGW DLLs into the folders of the executables which use them.\n    This is done via link_shared_libraries.sh which is called automatically by coq_platform_make.sh.\n    In case you install additional binaries which need addtional DLLs are called via VSCoq, e.g. solvers like gappa or z3, you might have to run this script again, but this should be rare since common DLLs are already linked.\nAdditional packages will be added in an intermediate release.\nIncluded Versions of Coq\nRecommended Coq version\n- Coq 8.20.1 with the first package collection from January 2025\nCompatibility Coq versions\nThe compatibility versions are intended to help porting packages from an older to the latest release. They can be installed in parallel with other versions of Coq (Coq Platform will create separate opam switches for each Coq version).\n- Coq 8.19.2 with the first package collection from October 2024\n- Coq 8.18.0 with the first package collection from November 2023\n- Coq 8.17.1 with the first package collection from August 2023\n- Coq 8.16.1 with an updated package collection from August 2023 which is as much as possible compatible with the first 8.17.1 package collection\n- Coq 8.16.1 with the first package collection from September 2022\n- Coq 8.15.2 with an updated package collection from September 2022 which is as much as possible compatible as possible with the first 8.16.1 package collection\n- Coq 8.15.2 with the first package collection from April 2022\n- Coq 8.14.1 with an updated package collection from April 2022 which is as much as possible compatible as possible with the first 8.15.2 package collection\n- Coq 8.14.1 with the first package collection from January 2022\n- Coq 8.13.2 with an updated package collection from January 2022 which is as much as possible compatible as possible with the first 8.14.1 package collection\n- Coq 8.13.2 with an updated package collection from September 2021\n- Coq 8.13.2 with the original package collection from February 2021\n- Coq 8.12.2 with the same package collection as the 8.12.2 Coq Platform release\nNotes\n- Notes on the macOS Intel installer: There are some issues with the Intel installer - we recommend to build from sources if you have an Intel Mac.\n- Notes on CoqHammer: The proof generation component of CoqHammer is available on macOS and Linux only. The CoqHammer tactics, which reconstruct generated proofs, do work on Windows, though. Since the CoqHammer tactic running on macOS and Linux creates simple and fast Coq tactic call snippets which are intended to replace the slow generator tactics, it is possible to use the auto generated tactics on Windows as well. Also you can manually write CoqHammer tactic calls on Windows.\n- Note on QuickChick: QuickChick requires an OCaml compiler to run. The binary installers for Coq Platform do not provide OCaml, so QuickChick does not work with the binary installers for macOS and Windows. It is recommended to use the \"compile from sources\" method if you want to use QuickChick. An alternative method is to install OCaml by other means and have it in the PATH, but this method is not supported by the Coq Platform team. We plan to add an OCaml compiler to the binary installers in a future release.\n- Note on SerAPI: The SerAPI executables like sertop require that either the COQLIB environment variable is exported or a --coqlib=${coqc -where} or similar option is given. Other Coq tools like coqc determine the Coq library path from the binary location, but sertop does not (yet).\n- Note on coq_makefile on Windows: The Windows installers don't supply make because make is quite limited without a posix shell. An addon is supplied which contains a Windows native gnumake and a patched template file for coq_makefile which allows to use coq_makefile and gnumake with CMD as shell.\nInstallers\nBinary installers are still in signing.","repo":{"author":"microsoft","repo":"winget-pkgs"},"version":"2025.1.0","site":"https://github.com/coq/platform","source":"The Coq Team","license_or_tos":"CC0-1.0","resources":null,"verified":false}